auth:
  adminUser: admin
  adminPassword: admin123

service:
  type: LoadBalancer
  port: 80

ingress:
  enabled: true
  annotations:
    alb.ingress.kubernetes.io/actions.ssl-redirect.type: "redirect"
    alb.ingress.kubernetes.io/certificate-arn: "arn:aws:acm:eu-west-1:297071026656:certificate/b368021d-cc49-44b0-b471-c4f63b1d6d29"
    alb.ingress.kubernetes.io/group.name: "datavisyn-test-eks"
    alb.ingress.kubernetes.io/healthcheck-protocol: "HTTP"
    alb.ingress.kubernetes.io/listen-ports: '[{"HTTP":80},{"HTTPS":443}]'
    alb.ingress.kubernetes.io/scheme: "internet-facing"
    alb.ingress.kubernetes.io/security-groups: "sg-098eddc7f2cba9552,sg-0835829910c38d499"
    alb.ingress.kubernetes.io/ssl-redirect: "443"
    alb.ingress.kubernetes.io/subnets: "subnet-09369a52f175cfc67,subnet-03b7d9a6422c0a350,subnet-0abd28689a34bcbb9"
    alb.ingress.kubernetes.io/target-type: "ip"
  hosts:
    - host: keyclock.datavisyn.pro
      paths:
        - path: /
          pathType: Prefix
  tls: []

postgresql:
  enabled: true
  auth:
    postgresPassword: mysecretpassword
  primary:
    persistence:
      enabled: false

image:
  repository: quay.io/keycloak/keycloak
  tag: "22.0.1"
  pullPolicy: IfNotPresent

command:
  - "/opt/keycloak/bin/kc.sh"
args:
  - "start-dev"

extraEnvVars:
  - name: KC_DB
    value: postgres
  - name: KC_DB_URL
    value: jdbc:postgresql://keycloak-postgresql.keycloak.svc.cluster.local:5432/bitnami_keycloak
  - name: KC_DB_USERNAME
    value: bn_keycloak
  - name: KC_DB_PASSWORD
    value: keycloakpass

resources:
  requests:
    memory: 512Mi
    cpu: 250m
  limits:
    memory: 1Gi
    cpu: 500m

replicaCount: 1

livenessProbe:
  enabled: true
  httpGet:
    path: /health/ready
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 10

readinessProbe:
  enabled: true
  httpGet:
    path: /health/ready
    port: 8080
  initialDelaySeconds: 5
  periodSeconds: 10
